-- Check if the database exists, and create it if it doesn't
SELECT
    CASE
        WHEN NOT EXISTS (SELECT 1 FROM pg_database WHERE datname = 'file_management_db')
            THEN
            'CREATE DATABASE file_management_db;'
        ELSE
            'Database already exists'
        END AS action;

create table if not exists permission_groups
(
    id         bigint generated by default as identity
        primary key,
    group_name varchar(255) not null
        constraint uk54cgvu6j22au38i2skf3fauwk
            unique
);

alter table permission_groups
    owner to postgres;

create table if not exists items
(
    id        bigint generated by default as identity
        primary key,
    name      varchar(255),
    type      varchar(255)
        constraint items_type_check
            check ((type)::text = ANY
                   ((ARRAY ['SPACE'::character varying, 'FOLDER'::character varying, 'FILE'::character varying])::text[])),
    parent_id bigint
        constraint fknl8t0cyp8m6vi7hksmlqpj0ek
            references items,
    group_id  bigint
        constraint fkjb9hxdnlutavqdxvwmit5a48w
            references permission_groups,
    constraint uk6l470k8mtvo80qsyj7r504doh
        unique (name, type, parent_id)
);

alter table items
    owner to postgres;

create table if not exists file
(
    id           bigint generated by default as identity
        primary key,
    binary_data  oid,
    content_type varchar(255),
    created_at   timestamp(6),
    created_by   varchar(255),
    size         bigint,
    item_id      bigint not null
        constraint fk2x2t6j8c7lo0hhbxjr2uh9m9e
            references items
);

alter table file
    owner to postgres;

create table if not exists permissions
(
    id               bigint generated by default as identity
        primary key,
    permission_level varchar(255) not null
        constraint permissions_permission_level_check
            check ((permission_level)::text = ANY
                   ((ARRAY ['VIEW'::character varying, 'EDIT'::character varying, 'DELETE'::character varying])::text[])),
    user_email       varchar(255) not null,
    group_id         bigint
        constraint fk8x2y1lngvikyd3o96y7fmsh88
            references permission_groups,
    constraint uk8unvs2o22vo1shyejo6r5e4xx
        unique (user_email, permission_level)
);

alter table permissions
    owner to postgres;

